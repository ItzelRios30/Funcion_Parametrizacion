##Cargar Librerías

import numpy as np
import pandas as pd 
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split 
from sklearn.preprocessing import StandardScaler
from sklearn.preprocessing import PolynomialFeatures
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error
from sklearn.metrics import max_error
from sklearn.metrics import explained_variance_score
from sklearn.model_selection import cross_val_score
from sklearn.tree import DecisionTreeClassifier
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn import metrics
from sklearn.preprocessing import OneHotEncoder
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_csv)
import xgboost as xgb
import csv as csv
from xgboost import plot_importance
from matplotlib import pyplot
from sklearn.model_selection import cross_val_score,KFold
from sklearn.model_selection import train_test_split 
from sklearn.metrics import mean_absolute_error
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt
from sklearn.model_selection import GridSearchCV
from scipy.stats import skew
from collections import OrderedDict
import joblib

##Cargar datos para probar 
test =  pd.read_csv("Downloads/test_colonia.csv")
test

##Diccionario con las colonias y los códigos de asignación a cada una
colonias = {'portales sur':365, 'portales norte':363, 'narvarte poniente':305, 'santa maria la ribera':452,
            'escandon i seccion':148, 'anahuac i seccion':46, 'roma norte':392, 'carola':87, 
            'san simon ticumac':440, 'santa cruz atoyac':444, 'san pedro de los pinos':436, 'algarin':20,
            'obrera':319, 'pedregal de carrasco':339, 'independencia':196,  'san rafael':438, 'alamos':15,
            'santa maria nonoalco':454, 'janitzio':204}
            
            
            
##Definir Función parametrizada            
def modelo_regresor(X):
    model_knnr = joblib.load('Downloads/modelo_entrenado_knnr.pkl')
    model_net = joblib.load('Downloads/modelo_entrenado_Elastic.pkl')
    model_XGB = joblib.load('Downloads/modelo_entrenado_xgboost.pkl')
    model_lasso = joblib.load('Downloads/modelo_entrenado_lasso.pkl')
    model_ridge = joblib.load('Downloads/modelo_entrenado_Ridge.pkl')
    model_poly = joblib.load('Downloads/modelo_entrenado_poly.pkl')
    model_SVM = joblib.load('Downloads/modelo_entrenado_svm.pkl')
    x4 = np.array(X[0:4]).reshape(1,-1) ## shape(1,4) para empatar con modelos entrenados
    
    if X[4] == colonias.get('alamos'):#colonias.get('portales sur'): #Portales  sur
        R = model_XGB.get(15).predict(x4)*0.78*x4[0][0]
        
    elif X[4] == colonias.get('portales sur'): #Portales  sur
        R = model_knnr.get(365).predict(x4)*0.78*x4[0][0]
        
    elif X[4]== colonias.get('portales norte'): #POrtales norte
        R = model_net.get(363).predict(x4)*0.78*x4[0][0]
        
    elif X[4]== colonias.get('narvarte poniente'): #Narvarte Poniente
        R = model_poly.get(305)[1].predict(model_poly.get(305)[0].fit_transform(x4))*0.78*x4[0][0]
        
    elif X[4]== colonias.get('santa maria la ribera'): #santa maria la ribera
        R = model_net.get(452).predict(x4)*0.78*x4[0][0]
    
    elif X[4]== colonias.get('escandon i seccion'): #escandon i seccion
        R = model_knnr.get(148).predict(x4)*0.78*x4[0][0]
        
    elif X[4]== colonias.get('anahuac i seccion'): #anahuac i seccion
        R = model_knnr.get(46).predict(x4)*0.78*x4[0][0]
    
    elif X[4]== colonias.get('roma norte'): #roma norte
        R = model_net.get(392).predict(x4)*0.78*x4[0][0]
    
    elif X[4]== colonias.get('carola'): #carola
        R = model_knnr.get(87).predict(x4)*0.78*x4[0][0]
    
    elif X[4]== colonias.get('san simon ticumac'): #san simon ticumac
        R = model_knnr.get(440).predict(x4)*0.78*x4[0][0]
    
    elif X[4]== colonias.get('santa cruz atoyac'): #santa cruz atoyac
        R = 45287*0.78*x4[0][0]
    
    elif X[4]== colonias.get('san pedro de los pinos'): #san pedro de los pinos
        R = model_SVM.get(436).predict(x4)*0.78*x4[0][0]
    
    elif X[4]==colonias.get('algarin'): #algarin
        R = model_knnr.get(20).predict(x4)*0.78*x4[0][0]
    
    elif X[4]== colonias.get('obrera'): #obrera
        R = model_knnr.get(319).predict(x4)*0.78*x4[0][0]
    
    elif X[4]== colonias.get('pedregal de carrasco'): #pedregal de carrasco
        R = model_poly.get(339)[1].predict(model_poly.get(339)[0].fit_transform(x4))*0.78*x4[0][0]
    
    elif X[4]== colonias.get('independencia'): #independencia
        R = model_XGB.get(196).predict(x4)*0.78*x4[0][0]
        
    elif X[4]== colonias.get('san rafael'): #san rafael
        R = model_knnr.get(438).predict(x4)*0.78*x4[0][0]
    
    elif X[4]== colonias.get('santa maria nonoalco'): #santa maria nonoalco
        R = model_XGB.get(454).predict(x4)*0.78*x4[0][0]
    
    elif X[4]== colonias.get('janitzio'): #janitzio204: #janitzio
         R = 33759*model_knnr.get(204).predict(x4)*0.78*x4[0][0]
        
    else: 
        R = print('No hay modelo para esa colonia') 
    return R     


###Loop para probar en los datos de prueba

for i in range(0,35):
    x = (test.iloc[i,:])  
    print(modelo_regresor(x))
